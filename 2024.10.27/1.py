from datetime import datetime

def main():
    # Запрос данных у пользователя
    fst_name = input("Ведите своё имя: ")
    lst_name = input("Ведие своё фамилия: ")
    brth_y = int(input("Введите свой год рождения:"))
    
    # Вывод данных, полученных от пользователя
    # ИСПРАВИТЬ: вывод не соответствует требуемому формату (лишний текст, лишние символы конца строки)
    # ИСПРАВИТЬ: необходимо справиться за один вызов функции print()
    # ИСПРАВИТЬ: в задаче необходимо вывести возраст, а не год рождения
    # ИСПРАВЛЕНИЕ: Хорошо, теперь программа выводит возраст, просто я неверно прочитал и думал, что вывод должен быть аналогичным
    current_year = datetime.now().year
    age = current_year - brth_y
    
    return fst_name, lst_name, age
# ОТВЕТИТЬ: знаете ли вы, что именно делает этот код, и зачем он нужен? если да, то расскажите мне; если нет, то не пользуйтесь им пока не узнаете
# Я понимаю, что блок if __name__ == "__main__": используется для управления выполнением кода в Python. Он позволяет разделить код, который должен выполняться при прямом запуске модуля, и код, который будет доступен при импорте. Это полезно для тестирования функций и поддержания структуры кода.
# Хотя я осознаю его важность и применение, я не использовал этот блок так часто в своих проектах. Я понимаю, что он помогает избежать нежелательного выполнения кода при импорте и делает код более организованным. В будущем я планирую применять его более активно в своих разработках.
# Но здесь, как вы правильно заметили, лучше им не пользоватся, так как пользы от того, что я его пропишу нет никакой.
if __name__ == "__main__":
    fst_name, lst_name, age = main()
    print('\n' ,fst_name, lst_name, ',', age)


# D:\Ilya\Working\Bobkov\2024.10.27>python -i 1.py
# Ведите своё имя: Илья
# Ведие своё фамилия: Бобков
# Введите свой год рождения:1991
# 
#  Илья Бобков , 33
# >>> fst_name
# 'Илья'
# >>> lst_name
# 'Бобков'
# >>> age
# 33


# ИТОГ: доработать — 1/3

